<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2020/07/24undefined.html"/>
      <url>/2020/07/24undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何分析开源项目"><a href="#如何分析开源项目" class="headerlink" title="如何分析开源项目"></a>如何分析开源项目</h1><h2 id="1、开源项目下载"><a href="#1、开源项目下载" class="headerlink" title="1、开源项目下载"></a>1、开源项目下载</h2><p>观察： </p><p>1、用了哪些技术 （Springboot，Vue，Redis，MQ…）</p><p>2、是否有数据库 （MySQL） </p><p>3、你的环境是否匹配（Java，Maven，npm，nodejs，redis, …..）<br>    通过了，然后在想办法运行！</p><h2 id="2、运行"><a href="#2、运行" class="headerlink" title="2、运行"></a>2、运行</h2><p>1、安装数据库，执行SQL</p><p>2、安装前端</p><p>​    cmd输入命令 npm install</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200722122229652.png" alt="image-20200722122229652"></p><p>3、后端项目<strong>导入</strong></p><p>导入之后在yml修改相关配置后启动项目</p><p>访问 <a href="http://localhost:8000/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8000/swagger-ui.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200722143328645.png" alt="image-20200722143328645"></p><p>4、前端vscode打开web项目，cmd输入命令npm run dev</p><h2 id="3、前后端分离项目固定套路"><a href="#3、前后端分离项目固定套路" class="headerlink" title="3、前后端分离项目固定套路"></a>3、前后端分离项目固定套路</h2><p>1、从前端开始分析。打开控制台，点一个接口，分析一波调用关系！ </p><p>2、前后端端口调用不一致~ 8013 – 8000，怎么操作的 </p><ul><li>封装了接口请求 ajax axios request</li><li>找到配置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104042725.png" alt="image-20200723104042725"></p><ul><li><p>前后端分离项目的重点：找到接口的调用关系 Springboot提供服务！ </p></li><li><p>前端调用接口数据！ Vue 负责渲染页面！</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104114055.png" alt="image-20200723104114055"></p><ul><li>前端项目固定套路</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104142001.png" alt="image-20200723104142001"></p><ul><li>通过抓取前端的请求，找到后端对应接口</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104220053.png" alt="image-20200723104220053"></p><ul><li>后端分析</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104235693.png" alt="image-20200723104235693"></p><ul><li>Controller–Service–Dao ：你就能看懂了！ </li><li>现在从前到到后可以分析了！但是如何渲染到试图上呢？看前端</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723104315105.png" alt="image-20200723104315105"></p><ul><li>vue标准套路</li></ul><pre class="line-numbers language-vue"><code class="language-vue"><template> 视图层</template><script> js操作，接口的调用 export default {}</script><style> 页面的样式</style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果你现在自己的项目或者你要学习一个模块，将这个模块独立抽取出来即可！删除法</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2019/12/10undefined.html"/>
      <url>/2019/12/10undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="教育经历"><a href="#教育经历" class="headerlink" title="教育经历"></a>教育经历</h1><ul><li><b>计算机专业</b><br>湖南铁道职业学院</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token function">String</span> <span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"gfg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>图片</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200725110632406.png" alt="image-20200725110632406"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试22222</title>
      <link href="/2019/12/10undefined.html"/>
      <url>/2019/12/10undefined.html</url>
      
        <content type="html"><![CDATA[<ul><li><b>计算机专业</b><br>湖南铁道职业学院</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token function">String</span> <span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"gfg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>图片</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200725110632406.png" alt="image-20200725110632406"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Blog System </category>
          
          <category> Hexo </category>
          
          <category> 有什么用？ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
